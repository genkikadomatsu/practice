# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:

        answer = True

        if not root: return answer

        # Determines if subtrees and balanced, and the height of this node
        def height(node):

            nonlocal answer

            if not node:
                return 0
            

            l = 1 + height(node.left)
            r = 1 + height(node.right)

            if abs(l - r) > 1:
                answer = False
            
            return max(l, r)
        
        height(root)

        return answer

        

