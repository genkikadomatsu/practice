# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next



# Recurrsive

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        

        if not head:
            return None
        
        new_head = head

        if head.next:
            new_head = self.reverseList(new_head.next)
            head.next.next = head
        
        head.next = None
        return new_head


# Iterative

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        if not head:
            return head

        a = None
        b = head

        while b:

            temp = b.next

            b.next = a
            a = b

            b = temp

        return a