class Node():


    def __init__(self):
        self.children = {}
        self.ends_word = False

class Trie:

    def __init__(self):
        self.root = Node()

    def insert(self, word: str) -> None:
        
        temp = self.root

        for c in word:
            if c in temp.children:
                temp = temp.children[c]
            else:
                temp.children[c] = Node()
                temp = temp.children[c]
        
        temp.ends_word = True


    def search(self, word: str) -> bool:
        
        temp = self.root

        for c in word:
            if c in temp.children:
                temp = temp.children[c]
            else:
                return False
        
        return temp.ends_word

    def startsWith(self, prefix: str) -> bool:
        
        temp = self.root

        for c in prefix:
            if c in temp.children:
                temp = temp.children[c]
            else:
                return False
        
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)