# LeetCode 347


# 12/24/2022

import collections
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:


        n_to_count = collections.defaultdict(int)

        for n in nums:
            n_to_count[n] += 1
        
        counts = [[] for n in nums]

        for (n, c) in n_to_count.items():
            counts[c - 1].append(n)

        result = []

        for count in counts:
            result += count
        
        return result[-k:]

        

# 12/25/22
# LeetCode 347
import collections
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:

        n = len(nums)

        n_to_count = collections.defaultdict(int)

        for n in nums:
            n_to_count[n] += 1
        
        frequencies = [[] * n]

        for n in n_to_count:
            frequencies[n_to_count[n]].append(n)
        
        flattened = []

        for f in frequencies:
            flattened = flattened + f
        
        return flattened[-k:]