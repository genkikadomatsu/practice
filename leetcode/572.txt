# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        
        if (not root and subRoot) or (root and not subRoot):
            return False
        elif not root and not subRoot:
            return True
        
        if root.val == subRoot.val:
           return isSubtree(root.left, subRoot.left) and isSubtree(root.right, subRoot.right)
        else:
            return isSubtree(root.left, subRoot) or isSubtree(root.right, subRoot)
        