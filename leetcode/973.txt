# OP approach

import math

class Solution:
    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:

        return sorted(points, key = lambda x : sqrt((x[0] ** 2) + (x[1] ** 2)))[:k]



# Normal approach

import math
import collections

class Solution:
    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:
        
        pts = []
        for p in points:
            
            pts.append([sqrt(p[0] ** 2 + p[1] ** 2), p[0], p[1]])
        
        heapq.heapify(pts)

        result = []

        for i in range(k):
            result.append(heapq.heappop(pts)[1:])
        
        return result
        